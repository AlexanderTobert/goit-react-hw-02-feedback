{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Alexa\\\\Documents\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\Statistics\\\\Statistics.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = _ref => {\n  let {\n    good,\n    neutral,\n    bad,\n    total,\n    positivePercentage\n  } = _ref;\n  const textElements = ['Good', 'Neutral', 'Bad', 'Total', 'Positive feedback'];\n  const values = [good, neutral, bad, total, positivePercentage];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: textElements.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [item, \": \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: index === 4 && positivePercentage > 75 ? 'green' : 'black'\n        },\n        children: index !== 4 ? values[index] : values[index] + '%'\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 33\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Statistics;\nexport { Statistics };\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["D:/Users/Alexa/Documents/goit-react-hw-02-feedback/src/components/Statistics/Statistics.jsx"],"names":["React","Statistics","good","neutral","bad","total","positivePercentage","textElements","values","map","item","index","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAG,QAAuD;AAAA,MAAtD;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,GAAjB;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B,GAAsD;AACtE,QAAMC,YAAY,GAAG,CAAC,MAAD,EAAS,SAAT,EAAoB,KAApB,EAA2B,OAA3B,EAAoC,mBAApC,CAArB;AACA,QAAMC,MAAM,GAAG,CAACN,IAAD,EAAOC,OAAP,EAAgBC,GAAhB,EAAqBC,KAArB,EAA4BC,kBAA5B,CAAf;AAEA,sBACI;AAAA,cAEQC,YAAY,CAACE,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,kBACb;AAAA,iBACKD,IADL,qBACY;AAEJ,QAAA,KAAK,EAAE;AAAEE,UAAAA,KAAK,EAAED,KAAK,KAAK,CAAV,IAAeL,kBAAkB,GAAG,EAApC,GAAyC,OAAzC,GAAmD;AAA5D,SAFH;AAAA,kBAIHK,KAAK,KAAK,CAAV,GAAcH,MAAM,CAACG,KAAD,CAApB,GAA8BH,MAAM,CAACG,KAAD,CAAN,GAAgB;AAJ3C,SACCD,IADD;AAAA;AAAA;AAAA;AAAA,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CApBD;;KAAMT,U;AAsBN,SAASA,UAAT","sourcesContent":["import React from 'react'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    const textElements = ['Good', 'Neutral', 'Bad', 'Total', 'Positive feedback'];\r\n    const values = [good, neutral, bad, total, positivePercentage];\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                textElements.map((item, index) => (\r\n                    <p>\r\n                        {item}: <span\r\n                            key={item}\r\n                            style={{ color: index === 4 && positivePercentage > 75 ? 'green' : 'black' }}\r\n                            >\r\n                            {index !== 4 ? values[index] : values[index] + '%'}\r\n                            </span>;\r\n                    </p>\r\n            ))\r\n            }\r\n        </div>\r\n    );\r\n}  \r\n\r\nexport { Statistics };"]},"metadata":{},"sourceType":"module"}