{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Alexa\\\\Documents\\\\goit-react-hw-02-feedback\\\\src\\\\App.jsx\";\nimport { Statistics } from 'components/Statistics/Statistics';\nimport { Section } from 'components/Section/Section';\nimport { FeedbackOptions } from 'components/FeedbackOptions/FeedbackOptions';\nimport { Component } from 'react';\nimport { Notification } from 'components/Notification/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n    this.btnElements = Object.keys(this.state);\n\n    this.handleFeedback = type => {\n      this.setState(prevState => ({ ...prevState,\n        [type]: prevState[type] + 1\n      }));\n    };\n\n    this.countTotalFeedback = values => values.reduce((a, b) => a += b);\n\n    this.countPositiveFeedbackPercentage = (good, totalFeedback) => totalFeedback && Math.round(good / totalFeedback * 100);\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const total = this.countTotalFeedback([good, neutral, bad]);\n    const positivePercentage = this.countPositiveFeedbackPercentage(good, total);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: this.btnElements,\n          handleFeedback: this.handleFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: !total ? /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"There is no feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          neutral: neutral,\n          bad: bad,\n          total: total,\n          positivePercentage: positivePercentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n;","map":{"version":3,"sources":["D:/Users/Alexa/Documents/goit-react-hw-02-feedback/src/App.jsx"],"names":["Statistics","Section","FeedbackOptions","Component","Notification","App","state","good","neutral","bad","btnElements","Object","keys","handleFeedback","type","setState","prevState","countTotalFeedback","values","reduce","a","b","countPositiveFeedbackPercentage","totalFeedback","Math","round","render","total","positivePercentage"],"mappings":";AAAA,SAASA,UAAT,QAA2B,kCAA3B;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,eAAT,QAA+B,4CAA/B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,sCAA7B;;;AAEA,OAAO,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCG,KADiC,GACzB;AACJC,MAAAA,IAAI,EAAE,CADF;AAEJC,MAAAA,OAAO,EAAE,CAFL;AAGJC,MAAAA,GAAG,EAAE;AAHD,KADyB;AAAA,SAOjCC,WAPiC,GAOnBC,MAAM,CAACC,IAAP,CAAY,KAAKN,KAAjB,CAPmB;;AAAA,SASjCO,cATiC,GASfC,IAAD,IAAU;AACvB,WAAKC,QAAL,CAAeC,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5B,SAACF,IAAD,GAAQE,SAAS,CAACF,IAAD,CAAT,GAAkB;AAFE,OAAhB,CAAd;AAIH,KAdgC;;AAAA,SAgBjCG,kBAhBiC,GAgBZC,MAAM,IAAIA,MAAM,CAACC,MAAP,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAWD,CAAC,IAAIC,CAA9B,CAhBE;;AAAA,SAkBjCC,+BAlBiC,GAkBC,CAACf,IAAD,EAAOgB,aAAP,KAChCA,aAAa,IAAIC,IAAI,CAACC,KAAL,CAAYlB,IAAI,GAAGgB,aAAR,GAAyB,GAApC,CAnBc;AAAA;;AAqBjCG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEnB,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACE,UAAMqB,KAAK,GAAG,KAAKV,kBAAL,CAAwB,CAACV,IAAD,EAAOC,OAAP,EAAgBC,GAAhB,CAAxB,CAAd;AACA,UAAMmB,kBAAkB,GAAG,KAAKN,+BAAL,CACzBf,IADyB,EAEzBoB,KAFyB,CAA3B;AAMF,wBACE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,uBAAf;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,OAAO,EAAE,KAAKjB,WADhB;AAEE,UAAA,cAAc,EAAE,KAAKG;AAFvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,YAAf;AAAA,kBACG,CAACc,KAAD,gBACC,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC,QAAC,UAAD;AACE,UAAA,IAAI,EAAEpB,IADR;AAEE,UAAA,OAAO,EAAEC,OAFX;AAGE,UAAA,GAAG,EAAEC,GAHP;AAIE,UAAA,KAAK,EAAEkB,KAJT;AAKE,UAAA,kBAAkB,EAAEC;AALtB;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA,oBADF;AA0BD;;AAxDgC;AA0DlC","sourcesContent":["import { Statistics } from 'components/Statistics/Statistics';\r\nimport { Section } from 'components/Section/Section';\r\nimport { FeedbackOptions} from 'components/FeedbackOptions/FeedbackOptions'\r\nimport { Component } from 'react';\r\nimport { Notification } from 'components/Notification/Notification';\r\n\r\nexport class App extends Component {\r\n  state = {\r\n      good: 0,\r\n      neutral: 0,\r\n      bad: 0\r\n  }\r\n  \r\n  btnElements = Object.keys(this.state);\r\n\r\n  handleFeedback = (type) => {\r\n      this.setState((prevState) => ({\r\n        ...prevState,\r\n        [type]: prevState[type] + 1,\r\n      }));\r\n  };\r\n    \r\n  countTotalFeedback = values => values.reduce((a, b) => (a += b));\r\n\r\n  countPositiveFeedbackPercentage = (good, totalFeedback) =>\r\n    totalFeedback && Math.round((good / totalFeedback) * 100);\r\n  \r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n      const total = this.countTotalFeedback([good, neutral, bad]);\r\n      const positivePercentage = this.countPositiveFeedbackPercentage(\r\n        good,\r\n        total\r\n      );\r\n\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.btnElements}\r\n            handleFeedback={this.handleFeedback}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {!total ? (\r\n            <Notification message=\"There is no feedback\"></Notification>\r\n          ) : (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          )}\r\n        </Section>\r\n\r\n      </>\r\n      \r\n    );\r\n  }\r\n  \r\n};\r\n"]},"metadata":{},"sourceType":"module"}